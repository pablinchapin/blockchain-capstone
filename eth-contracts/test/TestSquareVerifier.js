// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
//PVM 03/01/2022
const Verifier = artifacts.require('Verifier');

// - use the contents from proof.json generated from zokrates steps
const proofJson = require('./../../zokrates/code/square/proof.json');

contract('TestVerifier', async (accounts) => { 

    const account_zero = accounts[0];
    const account_one = accounts[1];

    describe('Verification proof', function () {

        beforeEach(async function () {
            this.instance = await Verifier.new( { from : account_zero } );
        });

        // Test verification with correct proof
        
        it(`Test verification with correct proof`, async function () {
            //const result = true;
            const result = await this.instance.verifyTx(
                proofJson.proof,
                proofJson.inputs               
            );
            
            assert.equal(result, true, "Incorrect verification");
        });

    
        // Test verification with incorrect proof
        it(`Test verification with incorrect proof`, async function () {
            //const result = false;
            const result = await this.instance.verifyTx(
                proofJson.proof,
                [3,6]     
            );
            
            assert.equal(result, false, "Correct verification");
        });

    });
    
});